{"version":3,"sources":["theme.js","navigation-bar/components/NavigationItem.js","navigation-bar/components/NavigationBar.js","navigation-bar/index.js","common/components/Banner.js","common/components/Page.js","common/components/gallery/components/GalleryItem.js","common/components/gallery/components/Gallery.js","common/components/gallery/index.js","common/components/NotFound.js","home/index.js","home/components/Home.js","lab/index.js","lab/components/Lab.js","app/components/App.js","app/index.js","serviceWorker.js","index.js"],"names":["theme","yellow","NavigationItem","styled","a","props","NavigationBar","nav","Item","Banner","div","Page","GalleryItem","Gallery","NotFound","Home","Lab","App","to","component","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wOAIeA,EAJD,CACZC,OAAQ,oB,qOCCV,IAaeC,EAbQC,IAAOC,EAAV,KASP,SAAAC,GAAK,OAAIA,EAAML,MAAMC,U,oLCRlC,IAAMK,EAAgBH,IAAOI,IAAV,KAQnBD,EAAcE,KAAON,EAENI,ICZAA,EDYAA,E,wHEXf,IAKeG,EALAN,IAAOO,IAAV,K,uLCAZ,IAQeC,EARFR,IAAOO,IAAV,K,uVCAV,IAiBeE,EAjBKT,IAAOO,IAAV,KAYH,SAAAL,GAAK,0BAAiBA,EAAML,MAAMC,WACnC,SAAAI,GAAK,OAAIA,EAAML,MAAMC,U,yKCZlC,IAAMY,EAAUV,IAAOO,IAAV,KAObG,EAAQL,KAAOI,EAEAC,ICXAA,EDWAA,EEFAC,EARG,WAChB,OACE,2CCHWC,ECEF,WACX,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAQP,KAAT,aACA,kBAAC,EAAQA,KAAT,aACA,kBAAC,EAAQA,KAAT,gBCTOQ,ECCH,WACV,OACE,qCCwCWC,IC3CAA,EDaf,WACE,OACE,kBAAC,IAAD,CAAejB,MAAOA,GACpB,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAMkB,GAAG,IAAIC,UAAWb,EAAcE,MAAtC,QAGA,kBAAC,IAAD,CAAMU,GAAG,OAAOC,UAAWb,EAAcE,MAAzC,QAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOY,KAAK,QACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,KACV,kBAAC,EAAD,YEvBME,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.08bf85d3.chunk.js","sourcesContent":["const theme = {\r\n  yellow: 'rgb(207, 191, 0)'\r\n};\r\n\r\nexport default theme;","import styled from 'styled-components';\r\n\r\nconst NavigationItem = styled.a`\r\n  padding: 0px 20px;\r\n  font-size: 32px;\r\n  line-height: 32px;\r\n\r\n  color: white;\r\n  transition: color .3s ease;\r\n\r\n  &:hover {\r\n    color: ${props => props.theme.yellow};\r\n  }\r\n`;\r\n\r\nexport default NavigationItem;\r\n","import styled from 'styled-components';\r\nimport NavigationItem from './NavigationItem';\r\n\r\nconst NavigationBar = styled.nav`\r\n  background-color: black;\r\n  height: 100px;\r\n  padding: 0px 20%;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nNavigationBar.Item = NavigationItem;\r\n\r\nexport default NavigationBar;\r\n","import NavigationBar from './components/NavigationBar';\r\nexport default NavigationBar;\r\n","import styled from 'styled-components';\r\n\r\nconst Banner = styled.div`\r\n  min-height: 200px;\r\n  border: 1px solid white\r\n`;\r\n\r\nexport default Banner;","import styled from 'styled-components';\r\n\r\nconst Page = styled.div`\r\n  background-color: #282c34;\r\n  min-height: 100vh;\r\n  font-size: 16px;\r\n  color: white;\r\n  position: relative;\r\n`;\r\n\r\nexport default Page;\r\n","import styled from 'styled-components';\r\n\r\nconst GalleryItem = styled.div`\r\n  border: 1px solid white;\r\n  transition: border,color .3s ease;\r\n  padding: 10px;\r\n  min-width: 180px;\r\n  min-height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    border: ${props => `1px solid ${props.theme.yellow}`};\r\n    color: ${props => props.theme.yellow};\r\n  }\r\n`;\r\n\r\nexport default GalleryItem;\r\n","import styled from 'styled-components';\r\nimport GalleryItem from './GalleryItem';\r\n\r\nconst Gallery = styled.div`\r\n  display: flex;\r\n  border: 1px solid white;\r\n  justify-content: space-evenly;\r\n  padding: 30px;\r\n`;\r\n\r\nGallery.Item = GalleryItem;\r\n\r\nexport default Gallery;\r\n","import Gallery from './components/Gallery';\r\nexport default Gallery;\r\n","import React from 'react';\r\n\r\nconst  NotFound = () => {\r\n  return (\r\n    <div>\r\n      Not Found\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import Home from './components/Home';\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Banner, Gallery } from '../../common';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Banner/>\r\n      <Gallery>\r\n        <Gallery.Item>Test</Gallery.Item>\r\n        <Gallery.Item>Test</Gallery.Item>\r\n        <Gallery.Item>Test</Gallery.Item>\r\n      </Gallery>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import Lab from './components/Lab';\r\nexport default Lab;\r\n","import React from 'react';\r\n\r\nconst Lab = () => {\r\n  return (\r\n    <div>\r\n      Lab\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lab;","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link\n} from \"react-router-dom\";\nimport theme from '../../theme';\nimport NavigationBar from '../../navigation-bar';\nimport Home from '../../home';\nimport Lab from '../../lab';\nimport { NotFound, Page } from '../../common';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Page>\n          <NavigationBar>\n            <Link to=\"/\" component={NavigationBar.Item}>\n              Home\n            </Link>\n            <Link to=\"/lab\" component={NavigationBar.Item}>\n              Lab\n            </Link>\n          </NavigationBar>\n          <Switch>\n            <Route path=\"/lab\">\n              <Lab />\n            </Route>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </Page>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import App from './components/App';\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}